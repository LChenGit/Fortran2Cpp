#include <iostream>
#include <vector>

class m2345678901234567890123456789012345678901234567890123456789_123 {
public:
    virtual void setValue(size_t index, int value) = 0;
};

class n2345678901234567890123456789012345678901234567890123456789_123 :
    public m2345678901234567890123456789012345678901234567890123456789_123 {
public:
    std::vector<int> x2345678901234567890123456789012345678901234567890123456789_123;

    n2345678901234567890123456789012345678901234567890123456789_123() {
        x2345678901234567890123456789012345678901234567890123456789_123.resize(10);
    }

    void setValue(size_t index, int value) override {
        if (index < x2345678901234567890123456789012345678901234567890123456789_123.size()) {
            x2345678901234567890123456789012345678901234567890123456789_123[index] = value;
        }
    }
};

// Simple testing function
void testSetValue() {
    n2345678901234567890123456789012345678901234567890123456789_123 obj;
    obj.setValue(4, 123); // Adjusted to match Fortran's 1-based indexing with equivalent functionality

    if (obj.x2345678901234567890123456789012345678901234567890123456789_123[4] == 123) {
        std::cout << "Test passed." << std::endl;
    } else {
        std::cout << "Test failed." << std::endl;
    }
}

int main() {
    testSetValue();
    return 0;
}